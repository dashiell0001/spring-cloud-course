version: "3.9"

services:
  flights-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: flights
      POSTGRES_USER: flight
      POSTGRES_PASSWORD: flight
    ports: ["5432:5432"]
    volumes: [flights_pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flight -d flights"]
      interval: 5s
      timeout: 5s
      retries: 10

  bookings-db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: bookings
      POSTGRES_USER: booking
      POSTGRES_PASSWORD: booking
    ports: ["5433:5432"]
    volumes: [bookings_pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking -d bookings"]
      interval: 5s
      timeout: 5s
      retries: 10

  jaeger:
    image: jaegertracing/all-in-one:1.57
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    command: --config.file=/etc/prometheus/prometheus.yml --web.enable-lifecycle
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "9091:9090"    # Prometheus UI
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.4
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"    # Loki API
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.4
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
      - ../services:/var/log/services:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: -config.file=/etc/promtail/config.yml


  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"    # Grafana UI
    restart: unless-stopped

volumes:
  flights_pgdata:
  bookings_pgdata:
