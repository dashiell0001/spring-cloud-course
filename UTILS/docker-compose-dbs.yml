version: "3.9"
services:
  flights-db:
    image: postgres:16-alpine
    container_name: flights-postgres
    environment:
      POSTGRES_DB: flights
      POSTGRES_USER: flight
      POSTGRES_PASSWORD: flight
    ports:
      - "5432:5432"
    volumes:
      - flights_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flight -d flights"]
      interval: 5s
      timeout: 5s
      retries: 10

  bookings-db:
    image: postgres:16-alpine
    container_name: bookings-postgres
    environment:
      POSTGRES_DB: bookings
      POSTGRES_USER: booking
      POSTGRES_PASSWORD: booking
    ports:
      - "5433:5432"
    volumes:
      - bookings_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking -d bookings"]
      interval: 5s
      timeout: 5s
      retries: 10

  keycloakdb:
    image: postgres:16
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5434:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 5s
      timeout: 5s
      retries: 10

  keycloak_web:
    image: quay.io/keycloak/keycloak:24.0.5
    container_name: keycloak_web
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak  # internal port
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
    command: start-dev
    depends_on:
      - keycloakdb
    ports:
      - "8099:8080"
    # In dev, avoid KC_HOSTNAME vars to prevent redirect issues when using 8099.

volumes:
  flights_pgdata:
  bookings_pgdata:
  keycloak_data:
